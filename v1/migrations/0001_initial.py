# -*- coding: utf-8 -*-
# Generated by Django 1.10.8 on 2020-03-20 02:28
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='SimGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='SimRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('method', models.CharField(choices=[('any', '<any>'), ('GET', 'GET'), ('POST', 'POST'), ('PUT', 'PUT'), ('DELETE', 'DELETE'), ('OPTION', 'OPTION')], default='any', max_length=10)),
                ('route', models.CharField(help_text='Route on URL of Simulator link', max_length=50)),
                ('name', models.CharField(help_text='Name of simulated response', max_length=150)),
                ('description', models.TextField(blank=True, help_text='Description', max_length=500)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='v1.SimGroup')),
            ],
        ),
        migrations.CreateModel(
            name='SimResponse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sequence', models.IntegerField(default=1, help_text='Unique by request')),
                ('headers', models.TextField(blank=True, help_text='Headers fore request')),
                ('sleep_second', models.PositiveSmallIntegerField(default=0, help_text='Seconds')),
                ('http_status_code', models.PositiveSmallIntegerField(choices=[(100, '100 - Continue'), (101, '101 - Switching Protocols'), (200, '200 - Ok'), (201, '201 - Created'), (202, '202 - Accepted'), (203, '203 - Non Authoritative Information'), (204, '204 - No Content'), (205, '205 - Reset Content'), (206, '206 - Partial Content'), (207, '207 - Multi Status'), (300, '300 - Multiple Choices'), (301, '301 - Moved Permanently'), (302, '302 - Found'), (303, '303 - See Other'), (304, '304 - Not Modified'), (305, '305 - Use Proxy'), (306, '306 - Reserved'), (307, '307 - Temporary Redirect'), (400, '400 - Bad Request'), (401, '401 - Unauthorized'), (402, '402 - Payment Required'), (403, '403 - Forbidden'), (404, '404 - Not Found'), (405, '405 - Method Not Allowed'), (406, '406 - Not Acceptable'), (407, '407 - Proxy Authentication Required'), (408, '408 - Request Timeout'), (409, '409 - Conflict'), (410, '410 - Gone'), (411, '411 - Length Required'), (412, '412 - Precondition Failed'), (413, '413 - Request Entity Too Large'), (414, '414 - Request Uri Too Long'), (415, '415 - Unsupported Media Type'), (416, '416 - Requested Range Not Satisfiable'), (417, '417 - Expectation Failed'), (422, '422 - Unprocessable Entity'), (423, '423 - Locked'), (424, '424 - Failed Dependency'), (428, '428 - Precondition Required'), (429, '429 - Too Many Requests'), (431, '431 - Request Header Fields Too Large'), (451, '451 - Unavailable For Legal Reasons'), (500, '500 - Internal Server Error'), (501, '501 - Not Implemented'), (502, '502 - Bad Gateway'), (503, '503 - Service Unavailable'), (504, '504 - Gateway Timeout'), (505, '505 - Ver Ion Not Supported'), (507, '507 - Insufficient Storage'), (511, '511 - Network Authentication Required')], default=200, help_text='HTTP status code of response')),
                ('body', models.TextField(help_text='Body of response')),
                ('request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='v1.SimRequest')),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='simresponse',
            unique_together=set([('request', 'sequence')]),
        ),
        migrations.AlterUniqueTogether(
            name='simrequest',
            unique_together=set([('route', 'method')]),
        ),
    ]
